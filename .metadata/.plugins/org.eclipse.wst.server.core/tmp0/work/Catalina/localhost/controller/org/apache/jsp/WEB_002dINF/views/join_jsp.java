/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.24
 * Generated at: 2019-09-05 05:38:30 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class join_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Join Us</title>\r\n");
      out.write("<script src=\"//code.jquery.com/jquery-1.11.1.min.js\"></script>\r\n");
      out.write("<script src=\"//netdna.bootstrapcdn.com/twitter-bootstrap/2.3.2/js/bootstrap.min.js\"></script>\r\n");
      out.write("<link href=\"//netdna.bootstrapcdn.com/twitter-bootstrap/2.3.2/css/bootstrap-combined.min.css\" rel=\"stylesheet\" id=\"bootstrap-css\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("\r\n");
      out.write("\t// 비밀번호와 비밀번호 확인이 일치하는가 확인하는 함수\r\n");
      out.write("\tfunction checkPassword(form) {\r\n");
      out.write("\t\tpassword1 = form.pw.value;\r\n");
      out.write("\t\tpassword2 = form.password_confirm.value;\r\n");
      out.write("\r\n");
      out.write("\t\t// If password not entered \r\n");
      out.write("\t\tif (password1 == \"\") {\r\n");
      out.write("\t\t\talert(\"비밀번호를 입력해주세요.\");\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t// If confirm password not entered \r\n");
      out.write("\t\telse if (password2 == \"\") {\r\n");
      out.write("\t\t\talert(\"비밀번호를 다시 한번 입력해주세요.\");\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t// If Not same return False.     \r\n");
      out.write("\t\telse if (password1 != password2) {\r\n");
      out.write("\t\t\talert(\"\\n비밀번호를 다시 확인해주세요!\\n비밀번호와 비밀번호 확인 내용은 같아야합니다.\")\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t// If same return True. \r\n");
      out.write("\t\telse {\r\n");
      out.write("\t\t\talert(\"회원가입 되셨습니다!\")\r\n");
      out.write("\t\t\treturn true;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("form {\r\n");
      out.write("  width: 60%;\r\n");
      out.write("  margin: 60px auto;\r\n");
      out.write("  background: #efefef;\r\n");
      out.write("  padding: 60px 120px 80px 120px;\r\n");
      out.write("  text-align: center;\r\n");
      out.write("  -webkit-box-shadow: 2px 2px 3px rgba(0,0,0,0.1);\r\n");
      out.write("  box-shadow: 2px 2px 3px rgba(0,0,0,0.1);\r\n");
      out.write("}\r\n");
      out.write("label {\r\n");
      out.write("  display: block;\r\n");
      out.write("  position: relative;\r\n");
      out.write("  margin: 10px 0px;\r\n");
      out.write("}\r\n");
      out.write(".label-txt {\r\n");
      out.write("  position: absolute;\r\n");
      out.write("  top: -1.6em;\r\n");
      out.write("  padding: 10px;\r\n");
      out.write("  font-family: sans-serif;\r\n");
      out.write("  font-size: .8em;\r\n");
      out.write("  letter-spacing: 1px;\r\n");
      out.write("  color: rgb(120,120,120);\r\n");
      out.write("  transition: ease .3s;\r\n");
      out.write("}\r\n");
      out.write(".input {\r\n");
      out.write("  width: 100%;\r\n");
      out.write("  padding: 10px;\r\n");
      out.write("  background: transparent;\r\n");
      out.write("  border: none;\r\n");
      out.write("  outline: none;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".line-box {\r\n");
      out.write("  position: relative;\r\n");
      out.write("  width: 100%;\r\n");
      out.write("  height: 2px;\r\n");
      out.write("  background: #BCBCBC;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".line {\r\n");
      out.write("  position: absolute;\r\n");
      out.write("  width: 0%;\r\n");
      out.write("  height: 2px;\r\n");
      out.write("  top: 0px;\r\n");
      out.write("  left: 50%;\r\n");
      out.write("  transform: translateX(-50%);\r\n");
      out.write("  background: #8BC34A;\r\n");
      out.write("  transition: ease .6s;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".input:focus + .line-box .line {\r\n");
      out.write("  width: 100%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".label-active {\r\n");
      out.write("  top: -3em;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("button {\r\n");
      out.write("  display: inline-block;\r\n");
      out.write("  padding: 12px 24px;\r\n");
      out.write("  background: #bd5d38 !important;\r\n");
      out.write("  font-weight: bold;\r\n");
      out.write("  color: rgb(120,120,120);\r\n");
      out.write("  border: none;\r\n");
      out.write("  outline: none;\r\n");
      out.write("  border-radius: 3px;\r\n");
      out.write("  cursor: pointer;\r\n");
      out.write("  transition: ease .3s;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("button:hover {\r\n");
      out.write("  background: #c9645d;\r\n");
      out.write("  color: #ffffff;\r\n");
      out.write("}\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<form onsubmit = \"return checkPassword(this)\" class=\"form-group\" action=\"join\" method=\"POST\">\r\n");
      out.write("\r\n");
      out.write("   <div id=\"formContent\">\r\n");
      out.write("     <h2>Register</h2>\r\n");
      out.write("   </div>\r\n");
      out.write("   <div class=\"control-group\">\r\n");
      out.write("     <!-- Username -->\r\n");
      out.write("     <label class=\"control-label\"  for=\"username\">ID</label>\r\n");
      out.write("     <div class=\"controls\">\r\n");
      out.write("       <input type=\"text\" id=\"mid\" name=\"mid\" placeholder=\"\" class=\"input-xlarge\">\r\n");
      out.write("     </div>\r\n");
      out.write("   </div>\r\n");
      out.write("\r\n");
      out.write("   <div class=\"control-group\">\r\n");
      out.write("     <!-- E-mail -->\r\n");
      out.write("     <label class=\"control-label\" for=\"email\">Nickname</label>\r\n");
      out.write("     <div class=\"controls\">\r\n");
      out.write("       <input type=\"text\" id=\"mname\" name=\"mname\" placeholder=\"\" class=\"input-xlarge\">\r\n");
      out.write("     </div>\r\n");
      out.write("   </div>\r\n");
      out.write("\r\n");
      out.write("   <div class=\"control-group\">\r\n");
      out.write("     <!-- Password-->\r\n");
      out.write("     <label class=\"control-label\" for=\"password\">Password</label>\r\n");
      out.write("     <div class=\"controls\">\r\n");
      out.write("       <input type=\"password\" id=\"pw\" name=\"pw\" placeholder=\"\" class=\"input-xlarge\">\r\n");
      out.write("     </div>\r\n");
      out.write("   </div>\r\n");
      out.write("\r\n");
      out.write("   <div class=\"control-group\">\r\n");
      out.write("     <!-- Password -->\r\n");
      out.write("     <label class=\"control-label\"  for=\"password_confirm\">Password (Confirm)</label>\r\n");
      out.write("     <div class=\"controls\">\r\n");
      out.write("       <input type=\"password\" id=\"password_confirm\" placeholder=\"\" class=\"input-xlarge\">\r\n");
      out.write("     </div>\r\n");
      out.write("   </div>\r\n");
      out.write("   \r\n");
      out.write("   \r\n");
      out.write("   \r\n");
      out.write("     <!-- Button -->\r\n");
      out.write("     <div>\r\n");
      out.write("       <button class=\"btn btn-success\">Register</button>\r\n");
      out.write("     </div>\r\n");
      out.write("</form>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
